# ADA COMPUTER SCIENCE LIVE
server {
    listen 443 ssl http2;

    server_name adacomputerscience.org;

    set $env live;

    include conf/ssl-ada-temp.conf;  # FIXME: remove once Ada in main cert.
    include conf/headers-default.conf;
    include conf/headers-proxy.conf;
    include conf/headers-ada-cs-content-security-policy.conf;

    location = /.well-known/change-password {
        return 302 https://adacomputerscience.org/account#passwordreset;
    }

    location /api {
        proxy_read_timeout 900s;
        proxy_cookie_path /isaac-api /;

        # Add WebSocket support:
        include conf/headers-websocket.conf;
        include conf/headers-proxy.conf;

        if ($request_uri ~* "^/api/([^/]+)/(.*)$") {
          proxy_pass http://ada-api-$env-$1:8080/isaac-api/$2;
        }
    }

    location / {
        # Enable compression of static assets:
        gzip on;

        # Force runtime resolution by using a variable. That way,
        # app-<env> doesn't have to be running when we start nginx
        proxy_pass http://ada-app-$env;
    }

    include conf/location-ada-cs-errors.conf;
    include conf/location-robots-txt.conf;
}


# ADA COMPUTER SCIENCE WWW. Redirect
server {
    listen 443 ssl http2;
    server_name www.adacomputerscience.org;

    include conf/ssl-ada-temp.conf;  # FIXME: remove once Ada in main cert.

    return 301 https://adacomputerscience.org$request_uri;
}


# ADA COMPUTER SCIENCE STAGING
server {
    # FIXME: this one to delete soon.
    listen 443 ssl http2;

    server_name  staging.ada.isaacphysics.org;

    include conf/ssl-dev-servers.conf;

    return 302 https://staging.adacomputerscience.org$request_uri;
}

server {
    listen 443 ssl http2;

    server_name  staging.adacomputerscience.org;

    include conf/ssl-ada-temp.conf;
    include conf/headers-default.conf;
    include conf/headers-proxy.conf;

    set $env staging;

    location /api/any/api/admin/new_version_alert {
        # FIXME: this location block to remove after live site exists.
        proxy_read_timeout 900s;
        proxy_cookie_path /isaac-api /;

        # Add WebSocket support:
        include conf/headers-websocket.conf;
        include conf/headers-proxy.conf;

        proxy_pass http://ada-api-$env-any:8080/isaac-api/api/admin/new_version_alert;
    }

    location /api/ {
        include conf/internal-ips-only.conf;  # FIXME: this can move to the parent block.

        proxy_read_timeout 900s;
        proxy_cookie_path /isaac-api /;

        # Add WebSocket support:
        include conf/headers-websocket.conf;
        include conf/headers-proxy.conf;

        if ($request_uri ~* "^/api/([^/]+)/(.*)$") {
            proxy_pass http://ada-api-$env-$1:8080/isaac-api/$2;
        }
    }

    location / {
        include conf/internal-ips-only.conf;  # FIXME: this can move to the parent block.

        # Enable compression of static assets:
        gzip on;

        # Force runtime resolution by using a variable. That way,
        # app-<env> doesn't have to be running when we start nginx
        proxy_pass http://ada-app-$env;
    }

    include conf/location-ada-cs-errors.conf;

}

# ADA CONTENT EDITOR
server {
    listen 443 ssl http2;
    server_name editor.ada.isaacphysics.org;  # FIXME: change to correct domain soon.

    include conf/ssl-dev-servers.conf;
    include conf/headers-default.conf;
    include conf/headers-proxy.conf;

    set $editor isaac-editor;

    location / {
        # Enable compression of static assets:
        gzip on;
        proxy_pass http://$editor;
    }

    include conf/location-ada-cs-errors.conf;
    include conf/location-robots-txt-no-robots.conf;
}


# ADA EDITOR PREVIEW
server {
    listen 443 ssl http2;
    server_name editor-preview.ada.isaacphysics.org;  # FIXME: change to correct domain soon.

    include conf/ssl-dev-servers.conf;
    # Load only the base headers, we want to allow this to be framed:
    include conf/headers-base.conf;
    include conf/headers-proxy.conf;

    set $editor_preview ada-renderer;

    location / {
        # Enable compression of static assets:
        gzip on;
        proxy_pass http://$editor_preview;
    }

    include conf/location-ada-cs-errors.conf;
    include conf/location-robots-txt-no-robots.conf;
}

# ISAAC TICKETS
server {
    listen 443 ssl http2;
    server_name tickets.adacomputerscience.org;

    include conf/internal-ips-only.conf;
    include conf/ssl-ada-temp.conf;
    include conf/headers-proxy.conf;

    location / {
        set $osticket ada-cs-tickets;
        proxy_pass http://$osticket;
    }

    include conf/location-ada-cs-errors.conf;
}


# ADA CDN
server {
    # FIXME: remove this and add to conf/servers-shared.conf once not a separate cert file.
    listen 443 ssl http2;
    server_name cdn.adacomputerscience.org;

    # Ensure important headers not removed by more add_header lines:
    include conf/headers-default.conf;
    include conf/ssl-ada-temp.conf;

    # Enable compression of static assets:
    gzip on;

    # Allow long-term caching of resources:
    etag off;
    add_header Cache-Control "public, max-age=31536000, no-transform";

    # Add CORS header:
    add_header Access-Control-Allow-Origin "*";

    location ~ /\.git {
        return 404;
    }

    location / {
        root   /var/cdn;
        default_type text/plain;
        try_files $uri =404;
    }

    include conf/location-ada-cs-errors;

    location = /robots.txt {
        add_header Cache-Control "public, max-age=86400";
        alias /usr/share/nginx/html/cdn-robots.txt;
    }
}