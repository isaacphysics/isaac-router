# ISAAC COMPUTER SCIENCE LIVE
server {
    listen 443 ssl http2;

    server_name isaaccomputerscience.org live.isaaccomputerscience.org;

    include conf/headers-proxy.conf;

    location / {
        return 404;
    }
}


# ISAAC COMPUTER SCIENCE WWW. Redirect
server {
    listen 443 ssl http2;
    server_name www.isaaccomputerscience.org;
    return 301 https://isaaccomputerscience.org$request_uri;
}


# ISAAC COMPUTER SCIENCE ALPHA
server {
    listen 443 ssl http2;

    server_name alpha.isaaccomputerscience.org;
    set $env alpha;

    include conf/internal-ips-only.conf;
    include conf/headers-default.conf;
    include conf/headers-proxy.conf;
    add_header Content-Security-Policy "default-src 'self'; object-src 'none';" always;
    add_header Feature-Policy "geolocation 'none'; camera 'none'; microphone 'none'; accelerometer 'none';" always;

    location /api/ {
        proxy_read_timeout 900s;
        proxy_cookie_path /isaac-api /;

        # Add WebSocket support:
        include conf/headers-websocket.conf;
        include conf/headers-proxy.conf;

        if ($request_uri ~* "^/api/([^/]+)/(.*)$") {
            proxy_pass http://cs-api-$env-$1:8080/isaac-api/$2;
        }
    }

    location / {
        # Enable compression of static assets:
        gzip on;

        # Force runtime resolution by using a variable. That way,
        # app-<env> doesn't have to be running when we start nginx
        proxy_pass http://cs-app-$env;
    }

    location = /isaac_error.html {
        root   /usr/share/nginx/html;
    }

}
