# ISAAC PHYSICS LIVE
server {
    listen 443 ssl http2;

    server_name isaacphysics.org;

    set $env live;

    include conf/headers-default.conf;
    include conf/headers-isaac-physics-content-security-policy.conf;
    include conf/headers-proxy.conf;

    location = /.well-known/change-password {
        return 302 https://isaacphysics.org/account#passwordreset;
    }

    location /physics_skills_14 {
        return 302 https://isaacphysics.org/books/physics_skills_14;
    }

    location = /assets/isaac-logo@2xWider.png {
        # Support old og:image and redirect to new one:
        return 302 https://cdn.isaacphysics.org/isaac/logos/isaacphysics-favicon-500px.png;
    }

    location ~ "^/s/([0-9a-zA-Z]{6})$" {
        # Support old share URLs:
        return 302 https://goo.gl/$1;
    }

    location /api {
        proxy_read_timeout 900s;
        proxy_cookie_path /isaac-api /;

        # Add WebSocket support:
        include conf/headers-websocket.conf;
        include conf/headers-proxy.conf;

        if ($request_uri ~* "^/api/([^/]+)/(.*)$") {
          proxy_pass http://phy-api-$env-$1:8080/isaac-api/$2;
        }
    }

    location /images/ {
        # To allow image caching, add a static path that doesn't
        # contain the API version number but proxy_passes as above
        # to any API of the right environment:
        proxy_cookie_path /isaac-api /;
        proxy_pass http://phy-api-$env-any:8080/isaac-api/api$request_uri;
    }

    location / {
        # Enable compression of static assets:
        gzip on;

        # Force runtime resolution by using a variable. That way,
        # app-<env> doesn't have to be running when we start nginx
        proxy_pass http://phy-app-$env;
    }

    include conf/location-isaac-errors.conf;
    include conf/location-robots-txt.conf;
}


# ISAAC PHYSICS WWW, BETA & OLD Redirect
server {
    listen 443 ssl http2;
    server_name www.isaacphysics.org beta.isaacphysics.org old.isaacphysics.org live.isaacphysics.org
                isaacphysics.co.uk isaacphysics.com;

    return 301 https://isaacphysics.org$request_uri;
}


# ISAAC PHYSICS STAGING & DEV
server {
    listen 443 ssl http2;

    server_name  ~(?<env>dev|staging)\.isaacphysics\.org$;

    include conf/internal-ips-only.conf;
    include conf/ssl-dev-servers.conf;
    include conf/headers-default.conf;
    include conf/headers-isaac-physics-content-security-policy.conf;
    include conf/headers-proxy.conf;

    location /api/ {
        proxy_read_timeout 900s;
        proxy_cookie_path /isaac-api /;

        # Add WebSocket support:
        include conf/headers-websocket.conf;
        include conf/headers-proxy.conf;

        if ($request_uri ~* "^/api/([^/]+)/(.*)$") {
            proxy_pass http://phy-api-$env-$1:8080/isaac-api/$2;
        }
    }

    location /images/ {
        # To allow image caching, add a static path that doesn't
        # contain the API version number but proxy_passes as above
        # to any API of the right environment:
        proxy_cookie_path /isaac-api /;
        proxy_pass http://phy-api-$env-any:8080/isaac-api/api$request_uri;
    }

    location / {
        # Enable compression of static assets:
        gzip on;

        # Force runtime resolution by using a variable. That way,
        # app-<env> doesn't have to be running when we start nginx
        proxy_pass http://phy-app-$env;
    }

    include conf/location-isaac-errors.conf;
}


# ISAAC PHYSICS TEMPORARY STAGING2
server {
    listen 443 ssl http2;

    server_name staging-2.isaacphysics.org;

    include conf/internal-ips-only.conf;
    include conf/ssl-dev-servers.conf;
    include conf/headers-default.conf;
    include conf/headers-proxy.conf;

    location /api/ {
        proxy_read_timeout 900s;
        proxy_cookie_path /isaac-api /;

        # Add WebSocket support:
        include conf/headers-websocket.conf;
        include conf/headers-proxy.conf;

        if ($request_uri ~* "^/api/([^/]+)/(.*)$") {
            set $staging phy-api-staging-any;
            proxy_pass http://$staging:8080/isaac-api/$2;
        }
    }

    location / {
        # Enable compression of static assets:
        gzip on;

        # Force runtime resolution by using a variable. That way,
        # staging2 doesn't have to be running when we start nginx
        set $staging2 phy-app-staging2;
        proxy_pass http://$staging2;
    }

    include conf/location-isaac-errors.conf;
}


# ISAAC PHYSICS TEST
server {
    listen 443 ssl http2;

    server_name  test.isaacphysics.org;

    error_page 502 504 /isaac_test_error.html;

    include conf/internal-ips-only.conf;
    include conf/ssl-dev-servers.conf;
    include conf/headers-default.conf;
    include conf/headers-isaac-physics-content-security-policy.conf;
    include conf/headers-proxy.conf;

    location /api/ {
        proxy_read_timeout 900s;
        proxy_cookie_path /isaac-api /;

        # Add WebSocket support:
        include conf/headers-websocket.conf;
        include conf/headers-proxy.conf;

        if ($request_uri ~* "^/api/([^/]+)/(.*)$") {
            proxy_pass http://phy-api-test-any:8080/isaac-api/$2;
        }

    }

    location /images/ {
        # To allow image caching, add a static path that doesn't
        # contain the API version number but proxy_passes as above
        # to any API of the right environment:
        proxy_cookie_path /isaac-api /;
        set $env test;
        proxy_pass http://phy-api-$env-any:8080/isaac-api/api$request_uri;
    }

    location / {
        # Enable compression of static assets:
        gzip on;

        # Force runtime resolution by using a variable. That way,
        # app-<env> doesn't have to be running when we start nginx
        set $env test;
        proxy_pass http://phy-app-$env;
    }

    include conf/location-isaac-errors.conf;

    location = /isaac_test_error.html {
        root   /usr/share/nginx/html;
    }
}


# ISAAC TICKETS
server {
    listen 443 ssl http2;
    server_name tickets.isaacphysics.org;

    include conf/internal-ips-only.conf;
    include conf/ssl-dev-servers.conf;
    include conf/headers-proxy.conf;

    location / {
        set $osticket isaac-phy-tickets;
        proxy_pass http://$osticket;
    }

    include conf/location-isaac-errors.conf;
}


# ISAAC MONITOR - temporarily using this to test Plausible integration
server {
    listen 443 ssl http2;
    server_name  monitor.isaacphysics.org;

    include conf/internal-ips-only.conf;
    include conf/ssl-dev-servers.conf;
    include conf/headers-proxy.conf;

    set $plausible plausible:8000;

    location / {
        proxy_pass http://$plausible;
    }

    include conf/location-isaac-errors.conf;
}
