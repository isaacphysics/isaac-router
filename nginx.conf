
user  nginx;

# The maximum number of connections for Nginx is calculated by:
# max_clients = worker_processes * worker_connections

# Setting worker_processes to auto attempts to create one process per CPU:
worker_processes auto;

error_log  /dev/stdout error;
pid        /var/run/nginx.pid;

# Maximum open file descriptors per process; it must be > worker_connections
# and less than 'ulimit -n' for the underlying operating system:
worker_rlimit_nofile 8192;

events {
    # Allow 8000 * number_of_cpus connections open. This is a lot.
    worker_connections  8000;
}


http {
    include       conf/mime.types;
    default_type  application/octet-stream;
    server_names_hash_bucket_size 64;

    client_max_body_size 10M;

    log_format  main  '[$time_local] $remote_addr $remote_user - $host "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;

    # Explicitly disable gzip in general (to avoid BREACH attacks):
    gzip off;
    # But configure compressible MIME types globally:
    gzip_types text/css text/javascript application/javascript image/svg+xml text/plain;

    keepalive_timeout  125;

    resolver 127.0.0.11 ipv6=off;
    resolver_timeout 5s;
    rewrite_log on;

    proxy_connect_timeout 1s;
    proxy_read_timeout 60s;
    error_page 404 500 502 503 504 /isaac_error.html;

    # SSL Configuration:
    include conf/ssl.conf;

    # Remove the nginx version from the Server header:
    server_tokens off;

    # Header Configuration:
    include conf/headers-default.conf;

    # HTTP -> HTTPS Redirect & LetsEncrypt
    server {
        listen 80;

        # Rely on a pitfall in nginx headers to remove all other headers
        # except this one. Having a header block prevents inheritance of
        # any other headers, like the HSTS one we don't want in HTTP!
        add_header X-Clacks-Overhead "GNU Terry Pratchett";

        location /.well-known {
            alias /usr/share/nginx/html/.well-known;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # DEFAULT SERVER
    server {
        listen 443 ssl default_server;

        location / {
            root   /usr/share/nginx/html;
            try_files $uri =404;
        }
    }

    # Isaac Physics Server Configuration:
    include conf/servers-isaacphysics.conf;

    # Isaac Computer Science Server Configuration:
    include conf/servers-isaaccomputerscience.conf;

    # Servers which serve both Physics and CS:
    include conf/servers-shared.conf;

    # Other Isaac Sites and Forwards:
    include conf/servers-other.conf;

}
