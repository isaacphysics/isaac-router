
user  nginx;
worker_processes  1;

error_log  /dev/stdout error;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}



http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    server_names_hash_bucket_size 64;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;
    
    resolver 127.0.0.11 ipv6=off;
 #   error_log /var/log/nginx/error.log;
    rewrite_log on;

    proxy_connect_timeout 1s;	

    error_page 500 502 503 504 /isaac_error.html;

    include ssl.conf;

    server {
        listen 80;

        location /.well-known {
            alias /usr/share/nginx/html/.well-known;
        }
    }

    server {
        listen 443 ssl;
        server_name www.isaacphysics.org;
        return 301 https://isaacphysics.org$request_uri;
    }

    server {
        listen       443 ssl;

        server_name  ~((?<env>dev|staging|live)\.)?isaacphysics\.org$;

        if ($env = '') {
            set $env live;
        }

        location /api {
            allow 128.232.0.0/16;
            allow 131.111.0.0/16;
	    allow 192.30.252.0/22;
            deny all;
            rewrite    ^/api/([^/]+)/(.*)$ $2 break;
            proxy_cookie_path /isaac-api /;
            proxy_pass http://api-$env-$1:8080/isaac-api/$2?$args;
        }

        location / {
            allow 128.232.0.0/16;
	    allow 131.111.0.0/16;
            deny all;
            # Force runtime resolution by using a variable. That way, 
            # app-<env> doesn't have to be running when we start nginx
            
            proxy_pass http://app-$env;
        }

        location = /isaac_error.html {
            root   /usr/share/nginx/html;
        }

    }

    server {
        listen       443 ssl;

        server_name  test.isaacphysics.org;

        location /api {
            allow 128.232.0.0/16;
            allow 131.111.0.0/16;
            deny all;
            rewrite    ^/api/([^/]+)/(.*) $2 break;
            proxy_cookie_path /isaac-api /;
            proxy_pass http://api-test:8080/isaac-api/$2?$args;
        }

        location / {
            allow 128.232.0.0/16;
            allow 131.111.0.0/16;
            deny all;
            # Force runtime resolution by using a variable. That way, 
            # app-<env> doesn't have to be running when we start nginx
            set $env test;
            proxy_pass http://app-$env;
        }

        error_page 502 /isaac_test_error.html;

	location = /isaac_error.html {
	    root /usr/share/nginx/html;
	}

        location = /isaac_test_error.html {
            root   /usr/share/nginx/html;
        }
    }

    server {
        listen 443 ssl default_server;

        location / {
            root   /usr/share/nginx/html;
        }
    }

}
